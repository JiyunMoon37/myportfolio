{
  "hash": "b2f98fb9d037f47a4faefcbed98d62a6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: LS 빅데이터 스쿨 HW5\nauthor: 지윤\ndate: '2024-07-30'\ncategories:\n  - bigdata\n---\n\nQ. 챕터 9-2 설문조사 그래프에서 각 성별 95% 신뢰구간 계산후 그리기\nnorm.ppf() 사용해서 그릴 것. 모분산은 표본 분산을 사용해서 추정\n위 아래 수직 막대기로 표시 \n\n### 기본코드\n\n::: {#549d19b0 .cell execution_count=1}\n``` {.python .cell-code}\n!pip install pyreadstat\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import norm\nfrom scipy.stats import uniform\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDefaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyreadstat in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (1.2.7)\nRequirement already satisfied: pandas>=1.2.0 in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (from pyreadstat) (2.2.2)\nRequirement already satisfied: numpy>=1.26.0 in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (from pandas>=1.2.0->pyreadstat) (2.0.1)\nRequirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (from pandas>=1.2.0->pyreadstat) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (from pandas>=1.2.0->pyreadstat) (2024.1)\nRequirement already satisfied: tzdata>=2022.7 in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (from pandas>=1.2.0->pyreadstat) (2024.1)\nRequirement already satisfied: six>=1.5 in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (from python-dateutil>=2.8.2->pandas>=1.2.0->pyreadstat) (1.16.0)\n```\n:::\n:::\n\n\n### 파일 불러오기\n\n::: {#63021100 .cell execution_count=2}\n``` {.python .cell-code}\nraw_welfare = pd.read_spss('C:/Users/USER/Documents/LS빅데이터스쿨/lsbigdata-project1/data/koweps/Koweps_hpwc14_2019_beta2.sav')\nraw_welfare\n\nwelfare = raw_welfare.copy()\n```\n:::\n\n\n### 변수명 변경하기\n\n::: {#c9f20256 .cell execution_count=3}\n``` {.python .cell-code}\nwelfare = welfare.rename(\ncolumns = {\n    \"h14_g3\" : \"sex\",\n    \"h14_g4\" : \"birth\",\n    \"h14_g10\" : \"marriage_type\",\n    \"h14_g11\" : \"religion\",\n    \"p1402_8aq1\" : \"income\",\n    \"h14_eco9\" : \"code_job\",\n    \"h14_reg7\" : \"code_region\"\n           }\n)\n\nwelfare = welfare[[\"sex\", \"birth\", \"marriage_type\", \"religion\", \"income\", \"code_job\", \"code_region\"]]\n```\n:::\n\n\n### 성별, 평균, 분산, 표준편차, 개수 구하기 \n\n::: {#44035bb7 .cell execution_count=4}\n``` {.python .cell-code}\nwelfare[\"sex\"] = np.where(welfare[\"sex\"]==1,\n'male', 'female')\n\nsex_income = welfare.dropna(subset = \"income\") \\\n                    .groupby(\"sex\", as_index = False) \\\n                    .agg(mean_income = (\"income\", \"mean\"),\n                         var_income = (\"income\",'var'),\n                         std_income = (\"income\",'std'),\n                         n_income = (\"income\",'count'))\nsex_income\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sex</th>\n      <th>mean_income</th>\n      <th>var_income</th>\n      <th>std_income</th>\n      <th>n_income</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>female</td>\n      <td>186.293096</td>\n      <td>17439.157372</td>\n      <td>132.057402</td>\n      <td>2245</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>male</td>\n      <td>349.037571</td>\n      <td>47463.961875</td>\n      <td>217.862254</td>\n      <td>2289</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 신뢰구간\n\n::: {#f8730df3 .cell execution_count=5}\n``` {.python .cell-code}\nz = norm.ppf(0.975, loc = 0, scale = 1)\n\nsex_income[\"left_ci\"] = sex_income[\"mean_income\"]- z * sex_income[\"std_income\"]/np.sqrt(sex_income[\"n_income\"])\n\nsex_income[\"left_ci\"]\n\nsex_income[\"right_ci\"] = sex_income[\"mean_income\"] + z * sex_income[\"std_income\"]/np.sqrt(sex_income[\"n_income\"])\n\nsex_income[\"right_ci\"]\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n0    191.755737\n1    357.962550\nName: right_ci, dtype: float64\n```\n:::\n:::\n\n\n### 그래프 \n\n::: {#35360d89 .cell execution_count=6}\n``` {.python .cell-code}\nsns.barplot(data=sex_income, x = \"sex\", y = \"mean_income\", palette='Set2', hue = \"sex\")\n\n#x위치 \nx = np.arange(len(sex_income))\n\n#신뢰구간 그리기 \nplt.vlines(x, \n           ymin=sex_income['left_ci'], \n           ymax=sex_income['right_ci'], \n           color='red', \n           linewidth=4)\n           \nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=593 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}