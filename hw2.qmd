---
title: "HW2"
jupyter: python3
---

# Do it! 쉽게 배우는 파이썬 데이터 분석 


### (p144) mpg 데이터를 이용해 분석 문제를 해결해 보세요.


Q1. 자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요. 

```{python}
import pandas as pd
mpg = pd.read_csv('data/mpg.csv')
#mpg

displ4 = mpg.query('displ <= 4')
#displ4
displ5 = mpg.query('displ >= 5')
#displ5

mean_4 = displ4['hwy'].mean()
#mean_4
mean_5 = displ5['hwy'].mean()
#mean_5

max_mean_hwy = max(mean_4, mean_5)
max_mean_hwy
```
displ이 4이하인 자동차의 hwy 평균이 더 높다는 것을 알 수 있다. 



Q2. 자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. 'audi'와 'toyota' 중 
어느 manufacturer(자동차 제조 회사)의 cty(도시 연비) 평균이 더 높은지 알아보세요. 

```{python}
audi = mpg.query('manufacturer == "audi"')
#audi
toyota = mpg.query('manufacturer == "toyota"')
#toyota

audi_cty = audi['cty'].mean()
#audi_cty
toyota_cty = toyota['cty'].mean()
#toyota_cty

max_cty = max(audi_cty, toyota_cty)
max_cty
```
totota의 cty 평균이 더 크다는 것을 알 수 있다. 



Q3. 'chevrolet', 'ford', 'honda' 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요. 

```{python}
#chevrolet = mpg.query('manufacturer == "chevrolet"')
#ford = mpg.query('manufacturer == "ford"')
#honda = mpg.query('manufacturer == "honda"')

three_car_hwy = mpg.query('manufacturer in ["chevrolet", "ford", "honda"]')
three_car_hwy
three_car_hwy['hwy'].mean()
```



### (p153) mpg 데이터를 이용해 분석 문제를 해결해보세요. 


Q1. 'audi'에서 생산한 자동차 중에 어떤 자동차 모델의 hwy(고속도로 연비)가 높은지 알아보려고 합니다. 'audi'에서 생산한 자동차 중 hwy가 1~5위에 해당하는 자동차의 데이터를 출력하세요. 

```{python}
audi = mpg.query('manufacturer == "audi"')
audi_hwy = audi.sort_values('hwy', ascending = False)
audi_hwy.head()
```



### (p158) mpg 데이터를 이용해 분석 문제를 해결해보세요. 


Q1. mpg 데이터 복사본을 만들고, cty와 hwy를 더한 '합산 연비 변수'를 추가하세요.

```{python}
mpg2 = mpg.copy() #복사

mpg2["합산 연비 변수"] = mpg2["cty"] + mpg2["hwy"]
mpg2.head()
```



Q2. 앞에서 만든 '합산 연비 변수'를 2로 나눠 '평균 연비 변수' 를 추가하세요. 

```{python}
mpg2["평균 연비 변수"] = (mpg2["합산 연비 변수"] / 2)
mpg2.head()
```



Q3. '평균 연비 변수'가 가장 높은 자동차 3종의 데이터를 출력하세요. 

```{python}
mean_data = mpg2.sort_values('평균 연비 변수', ascending = False)
mean_data.head(3)
```



Q4. 1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg 원본을 이용하세요. 

```{python}
last = mpg.assign(
    합산_연비_변수 = lambda x : x["cty"] + x["hwy"],
    평균_연비_변수 = lambda x : x["합산_연비_변수"] / 2) \
    .sort_values('평균_연비_변수', ascending = False)
    
last.head(3)
```





