{
  "hash": "e237fe5cf6c518767e126cad3819205d",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: LS 빅데이터 스쿨 HW3\nauthor: 지윤\ndate: '2024-07-25'\ncategories:\n  - bigdata\n---\n\n### 1. 정규분포 pdf 값을 계산하는 자신만의 파이썬 함수를 정의하고, 정규분포  mu = 3, sigma = 2의 pdf를 그릴 것. (def 사용) \n\n::: {#dbf45be5 .cell execution_count=1}\n``` {.python .cell-code}\n#기본 코드 \n#terminal에 쳐주고 시작하기 -> pip install pandas\nimport pandas as pd \nimport numpy as np\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n```\n:::\n\n\n::: {#6bcdf3f5 .cell execution_count=2}\n``` {.python .cell-code}\n#정규분포 pdf -> norm.pdf(x, mu, sigma) \n\ndef normal_pdf(x, mu, sigma) : \n    \"정규분포의 pdf를 계산하는 함수 \\\n    #loc -> mu \\\n    #scale -> sigma\"\n    \n    return (1 / (sigma * np.sqrt(2 * np.pi))) * np.exp(-((x - mu) ** 2) / (2 * sigma ** 2))\n    \nmu = 3\nsigma = 2\n\nx = np.linspace(-10, 10, 100)\npdf = normal_pdf(x, mu, sigma)\n\n#그래프\nplt.plot(x, pdf, color = \"blue\")\nplt.xlabel('x')\nplt.ylabel('PDF')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=606 height=429}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n### 2. 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.\nX ~ N(2, 3^2)\n1) P(X < 3)\n2) P(2 < X < 5)\n3) P(X < 3 or X<7)\n\n::: {#ad5dd4d1 .cell execution_count=3}\n``` {.python .cell-code}\n#X ~ N() -> norm.rvs\n#X ~ N(2, 3^2) -> norm.rvs(loc = 2, scale = 3, size = 1) \n\n#1) P(X < 3)\n#norm.rvs(loc = 2, scale = 3, size = 1) \na = norm.cdf(3, 2, 3)\na\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nnp.float64(0.6305586598182363)\n```\n:::\n:::\n\n\n::: {#597acc9f .cell execution_count=4}\n``` {.python .cell-code}\n#2) P(2 < X < 5)\nb = norm.cdf(5, 2, 3)\nc = norm.cdf(2, 2, 3)\nb-c\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nnp.float64(0.3413447460685429)\n```\n:::\n:::\n\n\n::: {#5a62d696 .cell execution_count=5}\n``` {.python .cell-code}\n#3) P(X < 3 or X<7)\nd = norm.cdf(3, 2, 3)\ne = norm.cdf(7, 2, 3)\nd + (1-e)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nnp.float64(0.678349012091051)\n```\n:::\n:::\n\n\n### 3. LS 빅데이터 스쿨 학생들의 중간고사 점수는 평균이 30이고, 분산이 4인 정규분포를 따른다. 상위 5%에 해당하는 학생의 점수는? \n\n::: {#3cea6ea7 .cell execution_count=6}\n``` {.python .cell-code}\n#평균이 30, 분산이 4, 표준편차가 2 \nloc = 30\nscale = 2\n\nx = norm.ppf(0.95, loc, scale)\nx\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\nnp.float64(33.28970725390295)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}